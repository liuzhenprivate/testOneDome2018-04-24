<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RechargeSetMapper">
	
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into TB_RECHARGE_SET(
			RECHARGE_TYPE,	
			FREE_TIME,	
			STATE,	
			MONEY,	
			BOOK_CURRENCY,	
			BOOK_CURRENCY_GIFT,	
			BOOK_CURRENCY_ALL,	
			USE_SCOPE,	
			BUY_LIMIT,	
			EXP_DATE,	
			SORT_NUM,	
			MEMO,	
			CREATE_TIME,
			UPDATE_TIME,
			RECHARGE_NAME
		) values (
			#{RECHARGE_TYPE},	
			#{FREE_TIME},	
			#{STATE},	
			#{MONEY},	
			#{BOOK_CURRENCY},	
			#{BOOK_CURRENCY_GIFT},	
			#{BOOK_CURRENCY_ALL},	
			#{USE_SCOPE},	
			#{BUY_LIMIT},	
			#{EXP_DATE},	
			#{SORT_NUM},	
			#{MEMO},	
			#{CREATE_TIME},
			#{UPDATE_TIME},
			#{RECHARGE_NAME}
		)
	</insert>
	
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from TB_RECHARGE_SET
		where 
			RECHARGE_SET_ID = #{RECHARGE_SET_ID}
	</delete>
	
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update  TB_RECHARGE_SET
			set 
				FREE_TIME = #{FREE_TIME},
				MONEY = #{MONEY},
				BOOK_CURRENCY = #{BOOK_CURRENCY},
				BOOK_CURRENCY_GIFT = #{BOOK_CURRENCY_GIFT},
				BOOK_CURRENCY_ALL = #{BOOK_CURRENCY_ALL},
				USE_SCOPE = #{USE_SCOPE},
				BUY_LIMIT = #{BUY_LIMIT},
				EXP_DATE = #{EXP_DATE},
				SORT_NUM = #{SORT_NUM},
				MEMO = #{MEMO},
				UPDATE_TIME = #{UPDATE_TIME},
				RECHARGE_NAME = #{RECHARGE_NAME}
			where 
				RECHARGE_SET_ID = #{RECHARGE_SET_ID}
	</update>
	
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
			RECHARGE_SET_ID,	
			RECHARGE_TYPE,	
			FREE_TIME,	
			STATE,	
			MONEY,	
			BOOK_CURRENCY,	
			BOOK_CURRENCY_GIFT,	
			BOOK_CURRENCY_ALL,	
			USE_SCOPE,	
			BUY_LIMIT,	
			EXP_DATE,	
			SORT_NUM,	
			MEMO,	
			CREATE_TIME,
			UPDATE_TIME,
			RECHARGE_NAME
		from 
			TB_RECHARGE_SET
		where 
			RECHARGE_SET_ID = #{RECHARGE_SET_ID}
	</select>
	
	
	<!-- 普通充值设置列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
				a.RECHARGE_SET_ID,	
				a.RECHARGE_TYPE,	
				a.FREE_TIME,	
				a.STATE,	
				a.MONEY,	
				a.BOOK_CURRENCY,	
				a.BOOK_CURRENCY_GIFT,	
				a.BOOK_CURRENCY_ALL,	
				a.USE_SCOPE,	
				a.BUY_LIMIT,	
				a.EXP_DATE,	
				a.SORT_NUM,	
				a.MEMO,	
				a.CREATE_TIME,
				a.UPDATE_TIME,
				a.RECHARGE_NAME
		from 
				TB_RECHARGE_SET a
		where a.RECHARGE_TYPE = 2
			<if test="pd.STATE !=null and pd.STATE !=''">
				and a.STATE = #{pd.STATE}
			</if>
		ORDER BY a.SORT_NUM
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
				a.RECHARGE_SET_ID,	
				a.RECHARGE_TYPE,	
				a.FREE_TIME,	
				a.STATE,	
				SUBSTRING(a.MONEY/100,1, LENGTH(a.MONEY/100)-5 ) MONEY,	
				a.BOOK_CURRENCY,	
				a.BOOK_CURRENCY_GIFT,	
				a.BOOK_CURRENCY_ALL,	
				a.USE_SCOPE,	
				a.BUY_LIMIT,	
				a.EXP_DATE,	
				a.SORT_NUM,	
				a.MEMO,	
				a.CREATE_TIME,
				a.UPDATE_TIME,
				a.RECHARGE_NAME
		from 
				TB_RECHARGE_SET a
		where a.RECHARGE_TYPE is null
			ORDER BY a.SORT_NUM
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from TB_RECHARGE_SET
		where 
			RECHARGE_SET_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 排序+1  -->
	<update id="numberupone" parameterType="pd">
		update  TB_RECHARGE_SET
			set 
				SORT_NUM = SORT_NUM+1
			where 
				SORT_NUM >= #{SORT_NUM}
	</update>
	
	
	<!-- 获取最后一个数据的排序号 -->
	<select id="seachnext" parameterType="pd" resultType="pd">
		select 
			RECHARGE_SET_ID,	
			RECHARGE_TYPE,	
			FREE_TIME,	
			STATE,	
			MONEY,	
			BOOK_CURRENCY,	
			BOOK_CURRENCY_GIFT,	
			BOOK_CURRENCY_ALL,	
			USE_SCOPE,	
			BUY_LIMIT,	
			EXP_DATE,	
			SORT_NUM,	
			MEMO,	
			CREATE_TIME,
			UPDATE_TIME,
			RECHARGE_NAME
		from 
			TB_RECHARGE_SET
		order by SORT_NUM desc
		limit 0,1
	</select>
	<!-- 修改状态（显示/隐藏） -->
	<update id="update" parameterType="pd">
		update  TB_RECHARGE_SET
			set 
				UPDATE_TIME = #{UPDATE_TIME},
				STATE = #{STATE}
			where 
				RECHARGE_SET_ID = #{RECHARGE_SET_ID}
	</update>
	
	<!--  序号加 -->
	<update id="editNoPlus" parameterType="pd">
		update  TB_RECHARGE_SET
			set 
				SORT_NUM = SORT_NUM+1
			where 
				SORT_NUM >= #{SORT_NUM}
			<![CDATA[   
				AND SORT_NUM <= #{SORT_NUM1}
			]]>   
	</update>
	
	<!--序号减 -->
	<update id="editNoReduce" parameterType="pd">
		update  TB_RECHARGE_SET
			set 
				SORT_NUM = SORT_NUM-1
			where 
				SORT_NUM >= #{SORT_NUM1}
			<![CDATA[   
				AND SORT_NUM <= #{SORT_NUM}
			]]> 
	</update>
	
	
	
	<!-- vip- -->
	
	<!-- vip列表 -->
	<select id="viplistPage" parameterType="page" resultType="pd">
		select
				a.RECHARGE_SET_ID,	
				a.RECHARGE_TYPE,	
				a.FREE_TIME,	
				a.STATE,	
				a.MONEY,	
				a.BOOK_CURRENCY,	
				a.BOOK_CURRENCY_GIFT,	
				a.BOOK_CURRENCY_ALL,	
				a.USE_SCOPE,	
				a.BUY_LIMIT,	
				a.EXP_DATE,	
				a.SORT_NUM,	
				a.MEMO,	
				a.CREATE_TIME,
				a.UPDATE_TIME,
				a.RECHARGE_NAME
		from 
				TB_RECHARGE_SET a
		where a.RECHARGE_TYPE = 0 or a.RECHARGE_TYPE = 1
			<if test="pd.STATE !=null and pd.STATE !=''">
				and a.STATE = #{pd.STATE}
			</if>
		ORDER BY a.SORT_NUM
	</select>
	
</mapper>