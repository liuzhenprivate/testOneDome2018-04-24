<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ArticleChapterMapper">
	
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into TB_ARTICLE_CHAPTER(
			ARTICLE_ID,	
			CHAPTER_NAME,	
			CHAPTER_NO,	
			CONTENT_URL,	
			IS_FREE,	
			CREATE_TIME,
			NUMBER_CHAPTER,
			CHAPTER_STATE,
			UPDATE_TIME
		) values (
			#{ARTICLE_ID},	
			#{CHAPTER_NAME},	
			#{CHAPTER_NO},	
			#{CONTENT_URL},	
			#{IS_FREE},	
			#{CREATE_TIME},
			#{NUMBER_CHAPTER},
			#{CHAPTER_STATE},
			#{UPDATE_TIME}
		)
	</insert>
	
	<!-- 批量添加（把中间表数据添加到章节表）-->
	<insert id="savetemp" parameterType="pd">
		insert into TB_ARTICLE_CHAPTER(
			ARTICLE_ID,	
			CHAPTER_NAME,	
			CHAPTER_NO,	
			CONTENT_URL,	
			CREATE_TIME,
			NUMBER_CHAPTER,
			UPDATE_TIME
		) values (
			#{ARTICLE_ID},	
			#{CHAPTER_NAME},	
			#{CHAPTER_NO},	
			#{CONTENT_URL},	
			#{CREATE_TIME},
			#{NUMBER_CHAPTER},
			#{UPDATE_TIME}
		)
	</insert>
	
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from TB_ARTICLE_CHAPTER
		where 
			ARTICLE_CHAPTER_ID = #{ARTICLE_CHAPTER_ID}
	</delete>
	
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update  TB_ARTICLE_CHAPTER
			set 
				<if test="ARTICLE_ID!=null and ARTICLE_ID!=''">
				ARTICLE_ID = #{ARTICLE_ID},
				</if>
				<if test="CHAPTER_NAME!=null and CHAPTER_NAME!=''">
				CHAPTER_NAME = #{CHAPTER_NAME},
				</if>
				<if test="CHAPTER_NO!=null and CHAPTER_NO!=''">
				CHAPTER_NO = #{CHAPTER_NO},
				</if>
				<if test="CONTENT_URL!=null and CONTENT_URL!=''">
				CONTENT_URL = #{CONTENT_URL},
				</if>
				<if test="NUMBER_CHAPTER!=null and NUMBER_CHAPTER!=''">
				NUMBER_CHAPTER = #{NUMBER_CHAPTER},
				</if>
				<if test="UPDATE_TIME!=null and UPDATE_TIME!=''">
				UPDATE_TIME = #{UPDATE_TIME},
				</if>
				ARTICLE_CHAPTER_ID =ARTICLE_CHAPTER_ID
			where 
				ARTICLE_CHAPTER_ID = #{ARTICLE_CHAPTER_ID}
	</update>
	
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
			ac.ARTICLE_CHAPTER_ID,	
			ac.ARTICLE_ID,	
			ac.CHAPTER_NAME,	
			ac.CHAPTER_NO,	
			ac.CONTENT_URL,	
			ac.IS_FREE,	
			ac.CONSUMES,
			ac.CREATE_TIME,
			ac.NUMBER_CHAPTER,
			ac.CHAPTER_STATE,
			ac.UPDATE_TIME,
			a.ARTICLE_NAME,
			a.COUNT_CHAPTERS
		from 
			TB_ARTICLE_CHAPTER ac LEFT JOIN TB_ARTICLE a on ac.ARTICLE_ID = a.ARTICLE_ID
		where ac.CHAPTER_STATE !=  2 
			and ac.ARTICLE_CHAPTER_ID = #{ARTICLE_CHAPTER_ID}
	</select>
	
	<!-- 统计数据前获取统计书籍信息 -->
	<select id="findByIdState" parameterType="pd" resultType="pd">
		select 
			ac.ARTICLE_CHAPTER_ID,	
			ac.ARTICLE_ID,	
			ac.CHAPTER_NAME,	
			ac.CHAPTER_NO,	
			ac.CONTENT_URL,	
			ac.IS_FREE,	
			ac.CONSUMES,
			ac.CREATE_TIME,
			ac.NUMBER_CHAPTER,
			ac.CHAPTER_STATE,
			ac.UPDATE_TIME,
			a.ARTICLE_NAME,
			a.COUNT_CHAPTERS
		from 
			TB_ARTICLE_CHAPTER ac LEFT JOIN TB_ARTICLE a on ac.ARTICLE_ID = a.ARTICLE_ID
		where ac.ARTICLE_CHAPTER_ID = #{ARTICLE_CHAPTER_ID}
	</select>
	
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
				a.ARTICLE_CHAPTER_ID,	
				a.ARTICLE_ID,	
				a.CHAPTER_NAME,	
				a.CHAPTER_NO,	
				a.CONTENT_URL,	
				a.IS_FREE,	
				a.CONSUMES,
				a.CREATE_TIME,
				a.NUMBER_CHAPTER,
				a.CHAPTER_STATE,
				a.UPDATE_TIME
		from 
				TB_ARTICLE_CHAPTER a 
		where CHAPTER_STATE !=  2
			<if test="pd.ARTICLE_ID!=null and pd.ARTICLE_ID!=''">
				and a.ARTICLE_ID = #{pd.ARTICLE_ID}
			</if>
			<if test="pd.CHAPTER_NAME!=null and pd.CHAPTER_NAME!=''">
				and a.CHAPTER_NAME LIKE CONCAT(CONCAT('%', #{pd.CHAPTER_NAME}),'%')
			</if>
			<if test="pd.sendTimeBegin!=null and pd.sendTimeBegin!='' ">
					AND a.CREATE_TIME>=#{pd.sendTimeBegin}
			</if>
			<if test="pd.sendTimeEnd!=null and pd.sendTimeEnd!='' ">
				<![CDATA[   
					AND a.CREATE_TIME <= #{pd.sendTimeEnd}
				]]>   
			</if>
	</select>
	
	<!-- 列表 -->
	<select id="chapterlistPage" parameterType="page" resultType="pd">
		select
				a.ARTICLE_CHAPTER_ID,	
				a.ARTICLE_ID,	
				a.CHAPTER_NAME,	
				a.CHAPTER_NO,	
				a.CONTENT_URL,	
				a.IS_FREE,	
				a.CONSUMES,
				a.CREATE_TIME,
				a.NUMBER_CHAPTER,
				a.CHAPTER_STATE,
				a.UPDATE_TIME,
				ac.CATEGORY,
				ac.ARTICLE_NAME,
				ac.CHANNEL_TYPE,
				ac.AUTHOR
		from 
				tb_article_chapter a LEFT JOIN (
					select
						a.ARTICLE_CATEGORY_ID,
						ac.CATEGORY,
						a.ARTICLE_NAME,
						a.CHANNEL_TYPE,
						a.ARTICLE_ID,
						a.AUTHOR
					from 
						tb_article a 
						LEFT JOIN 
						tb_article_category ac 
						on a.ARTICLE_CATEGORY_ID = ac.ARTICLE_CATEGORY_ID
				) ac on a.ARTICLE_ID = ac.ARTICLE_ID
		where a.CHAPTER_STATE  !=  2
				<if test="pd.CHANNEL_TYPE1 !=null and pd.CHANNEL_TYPE1 !=''">
					and ac.CHANNEL_TYPE = #{pd.CHANNEL_TYPE1}
				</if>
				<if test="pd.CATEGORY1 !=null and pd.CATEGORY1 !=''">
					and ac.ARTICLE_CATEGORY_ID = (
						select 
							ARTICLE_CATEGORY_ID 
						from 
							TB_ARTICLE_CATEGORY
						where 
							CATEGORY = #{pd.CATEGORY1}
					)
				</if>
				<if test="pd.CHAPTER_STATE1 !=null and pd.CHAPTER_STATE1 !=''">
					and a.CHAPTER_STATE = #{pd.CHAPTER_STATE1}
				</if>
				<if test="pd.IS_FREE1 !=null and pd.IS_FREE1 !=''">
					and a.IS_FREE = #{pd.IS_FREE1}
				</if>
				<if test="pd.startTime!=null and pd.startTime!='' ">
					AND UPDATE_TIME >=#{pd.startTime}
				</if>
				<if test="pd.endTime!=null and pd.endTime!='' ">
					<![CDATA[   
						AND UPDATE_TIME <= #{pd.endTime}
					]]>   
				</if>
				<if test="pd.booknamez!=null and pd.booknamez!=''">
					AND ( 
						ac.ARTICLE_NAME LIKE CONCAT(CONCAT('%', #{pd.booknamez}),'%')
						or 
						ac.AUTHOR LIKE CONCAT(CONCAT('%', #{pd.booknamez}),'%')
					)
				</if>
				ORDER BY  CREATE_TIME desc
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
				a.ARTICLE_CHAPTER_ID,	
				a.ARTICLE_ID,	
				a.CHAPTER_NAME,	
				a.CHAPTER_NO,	
				a.CONTENT_URL,	
				a.IS_FREE,	
				a.CONSUMES,
				a.CREATE_TIME,
				a.NUMBER_CHAPTER,
				a.CHAPTER_STATE,
				a.UPDATE_TIME
		from 
				TB_ARTICLE_CHAPTER a
		where a.CHAPTER_STATE !=  2
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from TB_ARTICLE_CHAPTER
		where 
			ARTICLE_CHAPTER_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	
	<!-- 通过书籍ID获取数据 -->
	<select id="countChapter" parameterType="pd" resultType="pd">
		select 
			count(ARTICLE_CHAPTER_ID) ARTICLE_CHAPTER_IDS
		from 
			TB_ARTICLE_CHAPTER
		where CHAPTER_STATE !=  2
			AND ARTICLE_ID = #{ARTICLE_ID}
	</select>
	
	<!--  序号为空，查找指定书籍章节的最后一个序号 -->
	<select id="nextArticleChapter" parameterType="pd" resultType="pd">
		select 
			ARTICLE_CHAPTER_ID,	
			ARTICLE_ID,	
			CHAPTER_NO	
		from 
			TB_ARTICLE_CHAPTER
			where ARTICLE_ID = #{ARTICLE_ID}
			order by CHAPTER_NO desc
			limit 0,1
	</select>
	
	<!--  查找指章节的最后一个id -->
	<select id="nextArticleChapter1" parameterType="pd" resultType="pd">
		select 
			ARTICLE_CHAPTER_ID,	
			ARTICLE_ID,	
			CHAPTER_NO	
		from 
			TB_ARTICLE_CHAPTER
			order by ARTICLE_CHAPTER_ID desc
			limit 0,1
	</select>
	
	<!-- 序号加1 -->
	<update id="upnextno" parameterType="pd">
		update  TB_ARTICLE_CHAPTER
			set 
				CHAPTER_NO = CHAPTER_NO + 1
			where 
				ARTICLE_ID = #{ARTICLE_ID}
				and CHAPTER_NO >= #{ARTICLECHAPTER_NO}
	</update>
	
	<!-- 添加文件保存路径 -->
	<update id="editUrl" parameterType="pd">
		update  TB_ARTICLE_CHAPTER
			set 
				CONTENT_URL =#{CONTENT_URL}
			where 
				ARTICLE_CHAPTER_ID = #{ARTICLE_CHAPTER_ID}
	</update>
	
	<!-- 修改章节价格 -->
	<update id="editmoneny" parameterType="pd">
		update  TB_ARTICLE_CHAPTER
			set 
				CONSUMES =#{CONSUMES}
			where 
				ARTICLE_ID = #{ARTICLE_ID}
	</update>
	<!-- 修改章节状态 -->
	<update id="update" parameterType="pd">
		update  TB_ARTICLE_CHAPTER
			set 
				UPDATE_TIME = #{UPDATE_TIME},
				CHAPTER_STATE = #{CHAPTER_STATE}
			where 
				ARTICLE_CHAPTER_ID = #{ARTICLE_CHAPTER_ID}
	</update>
	
	<!--  序号加 -->
	<update id="editNoPlus" parameterType="pd">
		update  TB_ARTICLE_CHAPTER
			set 
				CHAPTER_NO = CHAPTER_NO+1
			where ARTICLE_ID = #{ARTICLE_ID}
			 	AND CHAPTER_NO >= #{CHAPTER_NO}
			<![CDATA[   
				AND CHAPTER_NO <= #{CHAPTER_NO1}
			]]>   
	</update>
	
	<!--序号减 -->
	<update id="editNoReduce" parameterType="pd">
		update  TB_ARTICLE_CHAPTER
			set ARTICLE_ID = #{ARTICLE_ID}
				CHAPTER_NO = CHAPTER_NO-1
			where 
				AND CHAPTER_NO >= #{CHAPTER_NO1}
			<![CDATA[   
				AND CHAPTER_NO <= #{CHAPTER_NO}
			]]> 
	</update>
	
	<!--修改章节价格 -->
	<update id="updateConsums" parameterType="pd">
		update  TB_ARTICLE_CHAPTER
			set 
				<if test="IS_FREE!=null and IS_FREE!=''">
				IS_FREE = #{IS_FREE},
				</if>
				<choose>
					<when test="inpVal!=null and inpVal!=''">
						CONSUMES = #{inpVal}
					</when>
					<otherwise>
						CONSUMES = 0
					</otherwise>
				</choose>
			where 
				ARTICLE_CHAPTER_ID = #{inpId}
	</update>
	
	<!-- 根据推广连接查询章节 -->
	<select id="extensionchapter" parameterType="pd" resultType="pd">
		select 
			ac.ARTICLE_CHAPTER_ID,	
			ac.ARTICLE_ID,	
			ac.CHAPTER_NAME,	
			ac.CHAPTER_NO,	
			ac.CONTENT_URL,	
			ac.IS_FREE,	
			ac.CONSUMES,
			ac.CREATE_TIME,
			ac.NUMBER_CHAPTER,
			ac.CHAPTER_STATE,
			ac.UPDATE_TIME,
			a.ARTICLE_NAME,
			a.COUNT_CHAPTERS
		from 
			TB_ARTICLE_CHAPTER ac LEFT JOIN TB_ARTICLE a on ac.ARTICLE_ID = a.ARTICLE_ID
		where ac.CHAPTER_STATE =  0 
			and	 ac.ARTICLE_ID = #{ARTICLE_ID}
			ORDER BY CHAPTER_NO asc 
			LIMIT 0,#{ARTICLE_CHAPTERS}
	</select>
	<!--推广详情页面章节查询-->
	<select id="seachExtensionchapter" parameterType="pd" resultType="pd">
		select
				a.ARTICLE_CHAPTER_ID,	
				a.ARTICLE_ID,	
				a.CHAPTER_NAME,	
				a.CHAPTER_NO,	
				a.CONTENT_URL,	
				a.IS_FREE,	
				a.CONSUMES,
				a.CREATE_TIME,
				a.NUMBER_CHAPTER,
				a.CHAPTER_STATE,
				a.UPDATE_TIME
		from 
				TB_ARTICLE_CHAPTER a
		where a.CHAPTER_STATE =  0
		AND a.ARTICLE_ID = #{ARTICLE_ID}
		<![CDATA[   
			AND a.CHAPTER_NO <= (
				select CHAPTER_NO from TB_ARTICLE_CHAPTER where ARTICLE_CHAPTER_ID = #{ARTICLE_CHAPTER_ID}
			)
		]]> 
	</select>
	
	<!-- 通过章节id查询所要推广的章节 -->
	<select id="extensionchapterid" parameterType="pd" resultType="pd">
		select 
			ac.ARTICLE_CHAPTER_ID,	
			ac.ARTICLE_ID,	
			ac.CHAPTER_NAME,	
			ac.CHAPTER_NO,	
			ac.CONTENT_URL,	
			ac.IS_FREE,	
			ac.CONSUMES,
			ac.CREATE_TIME,
			ac.NUMBER_CHAPTER,
			ac.CHAPTER_STATE,
			ac.UPDATE_TIME
		from 
			TB_ARTICLE_CHAPTER ac 
		where CHAPTER_STATE =  0 
			and	 ac.ARTICLE_CHAPTER_ID = #{ARTICLE_CHAPTER_ID}
	</select>
	
	<!-- 通过排序号和书籍id查询章节 -->
	<select id="findByNo" parameterType="pd" resultType="pd">
		select 
			ac.ARTICLE_CHAPTER_ID,	
			ac.ARTICLE_ID,	
			ac.CHAPTER_NAME,	
			ac.CHAPTER_NO,	
			ac.CONTENT_URL,	
			ac.IS_FREE,	
			ac.CONSUMES,
			ac.CREATE_TIME,
			ac.NUMBER_CHAPTER,
			ac.CHAPTER_STATE,
			ac.UPDATE_TIME
		from 
			TB_ARTICLE_CHAPTER ac 
		where CHAPTER_STATE =  0 
			and	ac.ARTICLE_ID = #{ARTICLE_ID}
			and ac.CHAPTER_NO = #{CHAPTER_NO}
	</select>
	
	<!--生成渠道推广链接时查询强制关注章节-->
	<select id="extensionlist" parameterType="page" resultType="pd">
		select
				a.ARTICLE_CHAPTER_ID,	
				a.ARTICLE_ID,	
				a.CHAPTER_NAME,	
				a.CHAPTER_NO,	
				a.CONTENT_URL,	
				a.IS_FREE,	
				a.CONSUMES,
				a.CREATE_TIME,
				a.NUMBER_CHAPTER,
				a.CHAPTER_STATE,
				a.UPDATE_TIME
		from 
				TB_ARTICLE_CHAPTER a
		where CHAPTER_STATE = 0
				AND a.ARTICLE_ID = #{pd.ARTICLE_ID}
				AND a.IS_FREE = 0
				LIMIT #{pd.indexs},100
	</select>
	
	<!--生成推广链接时查询推广章节数-->
	<select id="countindexchapter" parameterType="pd" resultType="pd">
		select
				count(ARTICLE_CHAPTER_ID) indexs	
		from 
				TB_ARTICLE_CHAPTER
		where CHAPTER_STATE =  0
				AND ARTICLE_ID = #{ARTICLE_ID}
				<![CDATA[   
					AND CHAPTER_NO <= #{CHAPTER_NO}
				]]> 
				ORDER BY CHAPTER_NO
	</select>
	
	<!--通过书籍id查询章节的最后一章的序号 -->
	<select id="findByARTICLEID" parameterType="pd" resultType="pd">
		select 
			ac.ARTICLE_CHAPTER_ID,	
			ac.ARTICLE_ID,	
			ac.CHAPTER_NAME,	
			ifnull(ac.CHAPTER_NO , 1) CHAPTER_NO,	
			ac.CONTENT_URL,	
			ac.IS_FREE,	
			ac.CONSUMES,
			ac.CREATE_TIME,
			ac.NUMBER_CHAPTER,
			ac.CHAPTER_STATE,
			ac.UPDATE_TIME
		from 
			TB_ARTICLE_CHAPTER ac
		where ac.CHAPTER_STATE !=  2 
			AND ac.ARTICLE_ID = #{ARTICLE_ID}
			ORDER BY ac.CHAPTER_NO desc
			LIMIT 0,1
	</select>
	
	<!--书籍详情页面，改变章节状态 -->
	<update id="editstate" parameterType="pd">
		update  TB_ARTICLE_CHAPTER
			set 
				CHAPTER_STATE = #{CHAPTER_STATE}
			where 
				ARTICLE_CHAPTER_ID = #{ARTICLE_CHAPTER_ID}
	</update>
	
	
	<!--批量编辑书籍章节价格 -->
	<update id="editMoneys" parameterType="pd">
		UPDATE TB_ARTICLE_CHAPTER
				SET 
				<if test="IS_FREE!=null and IS_FREE!=''">
				IS_FREE = #{IS_FREE},
				</if>
				CONSUMES = #{CONSUMES}
		WHERE
			ARTICLE_CHAPTER_ID  = #{ARTICLE_CHAPTER_ID}
	</update>
	<!-- 修改章节价格签前查询是否有足够的章节 -->
	<select id="findBylimit" parameterType="pd" resultType="pd">
		SELECT
				ARTICLE_CHAPTER_ID
		FROM
				tb_article_chapter
		WHERE 
				CHAPTER_STATE != 2
				AND ARTICLE_ID = #{ARTICLE_ID}
				ORDER BY CHAPTER_NO ASC
				limit #{a},#{b}
	</select>
</mapper>